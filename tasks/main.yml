---
- name: Create MongoDB directory
  file:
    path: /home/{{default_user}}/{{ DOCKER_NAME }}/certificates
    state: directory  

- name: MongoDB Data Volume
  docker_volume:
    name: "{{ DOCKER_NAME }}_data"
    state: present

- name: MongoDB config file
  template:
    src: mongod.conf.j2
    dest: /home/{{default_user}}/{{ DOCKER_NAME }}/mongod.conf    

- name: MongoDB Generate Replica Set Standalone SH file
  template:
    src: set-rs-standalone.sh.j2
    dest: /home/{{default_user}}/{{ DOCKER_NAME }}/set-rs-standalone.sh

- name: MongoDB
  docker_container:
    name: "{{ DOCKER_NAME }}"
    image: "mongo:{{ BUILD }}"
    command: 
      - -f /etc/mongo/mongod.conf
    pull: "true"
    recreate: "yes"
    env:
      MONGO_INITDB_ROOT_USERNAME: "{{ ROOT_USERNAME }}"
      MONGO_INITDB_ROOT_PASSWORD: "{{ ROOT_PASSWORD }}"
    state: "started"
    log_driver: "{{DOCKER_LOG_DRIVER}}"
    log_options: "{{DOCKER_LOG_OPTIONS}}"
    restart_policy: "unless-stopped"
    published_ports:
      - "0.0.0.0:{{ NET_PORT }}:{{ NET_PORT }}"
    volumes:
      - /home/{{default_user}}/{{ DOCKER_NAME }}/mongod.conf:/etc/mongo/mongod.conf
      - '{{ DOCKER_NAME }}_data:/data/db'
      - /home/{{default_user}}/{{ DOCKER_NAME }}/certificates/:/etc/mongo/certificates
      - /home/{{default_user}}/{{ DOCKER_NAME }}/set-rs-standalone.sh:/etc/mongo/set-rs-standalone.sh

- name: Wait until MongoDB is running
  wait_for:
    port: "{{ NET_PORT }}"
    delay: 5
  when: SET_REPLICA_STANDALONE

- name: Config MongoDB Standalone Replica Set 
  command: docker exec {{DOCKER_NAME}} sh /etc/mongo/set-rs-standalone.sh
  ignore_errors: yes
  when: SET_REPLICA_STANDALONE